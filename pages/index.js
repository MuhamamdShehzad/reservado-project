import Head from "next/head";
import { BiCheck, BiSearch, BiUserPlus, BiX } from "react-icons/bi";
import Table from "../components/table";
import Form from "../components/propertyform";
import { useEffect, useState } from "react";
import SearchPropertyForm from "../components/searchProperty";
import { useDispatch, useSelector } from "react-redux";
import { deleteAction, toggleChangeAction } from "../redux/reducer";
import { useQuery, useQueryClient } from "react-query";
import { deleteProperty, getProperties } from "../lib/helper";

export default function Home() {
  const [visibleForm, setVisibleForm] = useState(false);

  const visible = useSelector((state) => state.app.client.toggleForm);
  const dispatch = useDispatch();

  const handler = () => {
    dispatch(toggleChangeAction());
  };

  const deleteId = useSelector((state) => state.app.client.deleteId);
  const queryclient = useQueryClient();

  const deletehandler = async () => {
    if (deleteId) {
      await deleteProperty(deleteId);
      await queryclient.prefetchQuery("property", getProperties);
      await dispatch(deleteAction(null));
    }
  };

  const canclehandler = async () => {
    console.log("cancel");
    await dispatch(deleteAction(null));
  };

  // ----------------------------------------------
  const { isLoading, isError, data, error } = useQuery(
    "property",
    getProperties
  );
  const searchHandler = () => {
    setVisibleForm(!visibleForm);
    setTableData(data);
  };
  const [tableData, setTableData] = useState(null);
  const [searchQuery, setSearchQuery] = useState({});
  useEffect(() => {
    if (data) {
      setTableData(data);
    }
  }, [data]);
  if (isLoading) return <div>Data is Loading...</div>;
  if (isError) return <div>Got Error {error}</div>;

  function handleSearch(query) {
    setSearchQuery(query);
    const filteredResult = data.filter((item) => {
      let match = false;
      if (Object.keys(query).length == 0) {
        return true;
      }
      if ((query.city && item.city === query.city) || query.city === "") {
        // filter by city
        console.log("city", item.city, query.city);
        match = true;
      }

      // filter by price
      if ((query.price && item.price <= query.price) || query.price === "") {
        console.log("price", item.price, query.price);
        match = true;
      }

      // filter by area
      if ((query.area && item.area >= query.area) || query.area === "") {
        console.log("area", item.area, query.area);
        match = true;
      }
      // filter by bedrooms
      if (
        (query.bedRooms && item.bedRooms === query.bedRooms) ||
        query.bedRooms === ""
      ) {
        console.log("bedRooms", item.bedRooms, query.bedRooms);
        match = true;
      }

      return match;
    });

    setTableData(filteredResult);
  }

  // ----------------------------------------------
  return (
    <section>
      <Head>
        <title>Reservado</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="py-5">
        <h1 className="text-xl md:text-5xl text-center font-bold py-10">
          Rent Managemnet System
        </h1>

        <div className="container mx-auto flex justify-between py-5 border-b">
          <div className="left flex gap-3">
            <button
              onClick={handler}
              name="add-property"
              className="flex bg-indigo-500 text-white px-4 py-2 border rounded-md hover:bg-grary-50 hover:border-indigo-500 hover:text-gray-800"
            >
              Add Property
              <span className="px-1">
                <BiUserPlus size={23}></BiUserPlus>
              </span>
            </button>
            <button
              onClick={searchHandler}
              name="search-property"
              className="flex bg-indigo-500 text-white px-4 py-2 border rounded-md hover:bg-grary-50 hover:border-indigo-500 hover:text-gray-800"
            >
              Search Property
              <span className="px-1">
                <BiSearch size={23}></BiSearch>
              </span>
            </button>
            {deleteId ? (
              DeleteComponent({ deletehandler, canclehandler })
            ) : (
              <></>
            )}
          </div>
        </div>

        {/* collapsable form */}
        {visibleForm ? <SearchPropertyForm onSearch={handleSearch} /> : <></>}
        {visible ? <Form></Form> : <></>}

        {/* table */}
        <div className="container mx-auto">
          {tableData ? <Table data={tableData}></Table> : <></>}
        </div>
      </main>
    </section>
  );
}

function DeleteComponent({ deletehandler, canclehandler }) {
  return (
    <div className="flex gap-5">
      <button>Are you sure?</button>
      <button
        onClick={deletehandler}
        className="flex bg-red-500 text-white px-4 py-2 border rounded-md hover:bg-rose-500 hover:border-red-500 hover:text-gray-50"
      >
        Yes{" "}
        <span className="px-1">
          <BiX color="rgb(255 255 255)" size={25} />
        </span>
      </button>
      <button
        onClick={canclehandler}
        className="flex bg-green-500 text-white px-4 py-2 border rounded-md hover:bg-gree-500 hover:border-green-500 hover:text-gray-50"
      >
        No{" "}
        <span className="px-1">
          <BiCheck color="rgb(255 255 255)" size={25} />
        </span>
      </button>
    </div>
  );
}
